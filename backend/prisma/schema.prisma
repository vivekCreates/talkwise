// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {

  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  password  String
  token     String?
  avatar    String?  @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQzR0bIMZ71HVeR5zF4PihQaDvTQQk6bsVERw&s")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  conversations Conversation[]
  messages      Message[]

  @@map("users")
}

model Conversation {

  id        String    @id @default(uuid())
  title     String?
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt() @map("updated_at")
  Message   Message[]

  @@map("converstions")
}

model Message {
 
  id            String       @id @default(uuid())
  sender        String        @default("user")
  content       String
  answer        String
  userId        String
  user          User         @relation(fields: [userId], references: [id])
  conversationId String
  conversation  Conversation @relation(fields: [conversationId], references: [id])
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt() @map("updated_at")

  @@map("messages")
}
